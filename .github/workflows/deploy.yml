name: "CI/CD Pipeline"
on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    environment: App Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT }}

    - name: Authenticate Docker with Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

    - name: Build and push to Artifact Registry
      run: |
        docker buildx build . -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/livenights/livenights-app
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/livenights/livenights-app


    - name: Deploy on Cloud Run
      run: |
        gcloud run deploy livenights-app \
        --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/livenights/livenights-app \
        --platform managed \
        --region us-central1 \
        --allow-unauthenticated \
        --set-env-vars 'AUTH_SECRET=${{ secrets.AUTH_SECRET }}' \
        --set-env-vars 'DATABASE_URL=${{ secrets.DATABASE_URL }}' \
        --set-env-vars 'AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }}' \
        --set-env-vars 'AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }}' \
        --set-env-vars 'AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }}'
    
    - name: Get Cloud Run URL
      id: get-url
      run: |
        URL=$(gcloud run services describe livenights-app \
          --platform managed \
          --region us-central1 \
          --format='value(status.url)')
        echo "CLOUD_RUN_URL=$URL" >> $GITHUB_ENV

    - name: Set more env vars
      run: |
        gcloud run services update livenights-app \
          --platform managed \
          --region us-central1 \
          --update-env-vars "NEXTAUTH_URL=$CLOUD_RUN_URL"
          --update-env-vars "NEXT_PUBLIC_TICKETS_API_ENDPOINT=$CLOUD_RUN_URL/api/tickets"

        
        
        
