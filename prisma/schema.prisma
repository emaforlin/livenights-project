// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model TicketOrder {
  id Int @id @default(autoincrement())
  uid String @default(uuid())
  description String
  createdAt DateTime @default(now())
  usedAt DateTime?
  user_id Int
  event_id Int
  batch_id Int

  user User @relation(fields: [user_id], references: [id])
  event Event @relation(fields: [event_id], references: [id])
  batch TicketBatch @relation(fields: [batch_id], references: [id])
}

model TicketBatch {
  id Int @id @default(autoincrement())
  name String
  price Float
  quantity Int
  start_date DateTime
  end_date DateTime
  active Boolean @default(false)
  event_id Int

  event Event @relation(fields: [event_id], references: [id])

  TicketOrder TicketOrder[]
}

model Event {
  id Int @id @default(autoincrement())
  uid String @default(uuid())
  title String @unique
  description String 
  date DateTime
  location String
  image String @unique
  producer_id Int

  producer User @relation(fields: [producer_id], references: [id])

  TicketBatch TicketBatch[]

  TicketOrder TicketOrder[]
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  username String? @unique
  password String?
  role_id Int 
  role Role @relation(fields: [role_id], references: [id])
  events Event[]

  Image Image[]

  TicketOrder TicketOrder[]
}

model Role {
  id Int @id @default(autoincrement())
  name String @unique
  
  RolePermission RolePermission[]

  User User[]
}

model Permission {
  id Int @id @default(autoincrement())
  name String @unique

  RolePermission RolePermission[]
}

model RolePermission {
  id Int @id @default(autoincrement())
  role_id Int
  permission_id Int

  role Role @relation(fields: [role_id], references: [id])
  permission Permission @relation(fields: [permission_id], references: [id])
}

model Image {
  id Int @id @default(autoincrement())
  filename String @unique
  file Bytes
  filetype String
  in_use Boolean @default(false)
  last_used DateTime @default(now())
  owner_id Int
  owner User @relation(fields: [owner_id], references: [id])
}